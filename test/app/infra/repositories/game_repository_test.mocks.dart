// Mocks generated by Mockito 5.3.2 from annotations
// in game_lovers/test/app/infra/repositories/game_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:game_lovers/app/domain/dtos/dtos.dart' as _i5;
import 'package:game_lovers/app/domain/entities/entities.dart' as _i4;
import 'package:game_lovers/app/infra/data_sources/local/local_game_data_source.dart'
    as _i6;
import 'package:game_lovers/app/infra/data_sources/remote/remote_game_data_source.dart'
    as _i2;
import 'package:game_lovers/app/infra/drivers/internet_driver.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IRemoteGameDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRemoteGameDataSource extends _i1.Mock
    implements _i2.IRemoteGameDataSource {
  MockIRemoteGameDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.GameEntity>> getAll(
          {required _i5.GetAllGamesInputDto? input}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
          {#input: input},
        ),
        returnValue: _i3.Future<List<_i4.GameEntity>>.value(<_i4.GameEntity>[]),
      ) as _i3.Future<List<_i4.GameEntity>>);
}

/// A class which mocks [ILocalGameDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocalGameDataSource extends _i1.Mock
    implements _i6.ILocalGameDataSource {
  MockILocalGameDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.GameEntity>> getAll(
          {required _i5.GetAllGamesInputDto? input}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
          {#input: input},
        ),
        returnValue: _i3.Future<List<_i4.GameEntity>>.value(<_i4.GameEntity>[]),
      ) as _i3.Future<List<_i4.GameEntity>>);
  @override
  _i3.Future<bool> saveAll({required List<_i4.GameEntity>? games}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAll,
          [],
          {#games: games},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [IInternetDriver].
///
/// See the documentation for Mockito's code generation for more information.
class MockIInternetDriver extends _i1.Mock implements _i7.IInternetDriver {
  MockIInternetDriver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
